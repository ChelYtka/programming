name: 'C++ CI'  # имя рабочего процесса

on:             # определяет тригер запуска
  push:
    branches:
      - main
      - feature/github_actions

jobs:           # набор заданий

  build-linux:        # имя задания
    runs-on: ubuntu-latest          # среда выполения
    permissions: write-all          # предоставляем все разрешения
    steps:                          # шаги
      - uses: actions/checkout@v3   # проверяем код репозитория
        with:
          submodules: true
      # устанавливаем зависимость, устанавливаем библиотеки
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      # процесс сборки
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      # выполняем тесты
      - run: cmake --build . --target test
      # создаём пакеты, упаковываем прил. после сборки
      - run: cmake --build . --target package
      # создаём релиз с тегом, соответствующим номеру запуска
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      # загружаем созданный пакет
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

  build-windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3

      # Install dependencies (example for vcpkg)
      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat

      # Install necessary libraries using vcpkg or directly through Chocolatey if needed.
      # Example for installing Boost via vcpkg (adjust as necessary)
      - name: Install Boost Libraries
        run: .\vcpkg\vcpkg install boost-test

      # Configure and build using CMake
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -G "Visual Studio 16 2019"
      - run: cmake --build . --config Release

      # Run tests
      - run: ctest --output-on-failure

      # Package creation (if applicable)
      # Add your packaging step here if needed

      # Create Release on GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      # Upload Release Asset
      # Adjust paths according to your build artifacts
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Windows.zip  # Adjust path as needed.
          asset_name: helloworld-0.0.${{ github.run_number }}-Windows.zip  # Adjust name as needed.
          asset_content_type: application/zip  # Adjust content type as needed.